name: 🛡️ Scan Docker image `latest` 🐳

on: 
  schedule:
  - cron: '5 18 * * *'

jobs:
  scan:
    runs-on: ubuntu-latest
    steps:
      - name: Log into registry ghcr.io
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: anchore/scan-action@v3
        id: scan
        with:
         image: docker.io/optnc/api-transitaires:latest
         fail-build: true
         severity-cutoff: critical

      - name: Scan report
        if: ${{ failure() }}
        id: scan_report
        run: |
          report=$(cat ${{ steps.scan.outputs.sarif }} | jq -r '.runs[0].tool.driver.rules[].shortDescription.text')
          echo "$report"
          report="${report//$'\n'/'%0A'}"
          echo ::set-output name=report::$report

      - name: Create/Update an issue of vulnerabilities 🛡️ that have been detected
        if: ${{ failure() }}
        uses: actions/github-script@v6
        with:
          script: |
            const { owner, repo } = context.repo;
            const labels = ['security', 'docker-scan'];

            // récupération de l'id de la dernière issue (si existante)
            const existingIssue = (await github.paginate(github.rest.issues.listForRepo.endpoint.merge({
              owner, repo, state: 'open',labels
            }))).filter(i => i.title.indexOf('\`${{ github.repository }}:latest\`') !== -1)[0];

            // création ou modification de l'issue
            const body = `:point_right: Vulnéraibilités trouvées :
                \`\`\`
                ${{ steps.scan_report.outputs.report }}
                \`\`\`
                `;
            if (existingIssue) {
              github.rest.issues.update({ owner, repo, issue_number: existingIssue.number, body });
            } else {
              github.rest.issues.create({
                owner, repo,
                title: '🛡️ Vulnéraibilités détectées dans l\'image \`optnc/api-transitaires:latest\` 🛡️',
                body,
                labels
              });
            }